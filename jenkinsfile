pipeline {
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
    }
    agent { 
        label 'hero_sdk'
    }
    parameters {
        string(name: 'HERO_CI', defaultValue: '1')
    }
    stages {
        stage('Checkout') {
            steps {
                timeout(time: 10, unit: 'MINUTES') {
                    sh './hero-z-7045-builder -s'
                }
            }
        }
        stage('Build PULP GCC (riscv32') {
            steps {
                timeout(time: 30, unit: 'MINUTES') {
                    sh './hero-z-7045-builder -r'
                }
            }
        }
        stage('Build PULP SDK') {
            steps {
                timeout(time: 30, unit: 'MINUTES') {
                    sh './hero-z-7045-builder -p'
                }
            }
        }
        stage('Build Host GCC (armv7') {
            steps {
                timeout(time: 30, unit: 'MINUTES') {
                    sh './hero-z-7045-builder -a'
                }
            }
        }
        stage('Build Linux') {
            steps {
                timeout(time: 40, unit: 'MINUTES') {
                    sh './hero-z-7045-builder -l'
                }
            }
        }
        stage('Build HERO libraries') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                    sh './hero-z-7045-builder -o'
                }
            }
        }
        stage('Build HERO GCC') {
            steps {
                timeout(time: 40, unit: 'MINUTES') {
                    sh './hero-z-7045-builder -t'
                }
            }
        }

        stage ('Build & Test') {
            steps {
                sh 'echo Building... Failure here will fail the build'
                script {
                    try {
                        echo 'Running tests...'
                        sh 'exit 1'
                    }
                    catch (exc) {
                        echo 'Testing failed!'
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
        }

        stage('Create Artifact') {
            steps {
                timeout(time: 30, unit: 'MINUTES') {
	                script {
    	                try {
    	                	sh './hero-z-7045-builder -z'
                	    }
                    	catch (exc) {
                        	echo 'Create Artifact Failed!'
                        	currentBuild.result = 'UNSTABLE'
                    	}
                	}
                }
            }
            post {
                success {
                    archiveArtifacts 'hero-gcc-toolchain-*.tar.gz' 
                }
            }
        }
        stage('Tests') {
            steps {
	            script {
	                try {
	                	sh './hero-z-7045-builder -c'
	        	    }
	            	catch (exc) {
	                	echo 'Tests Failed!'
	                	currentBuild.result = 'UNSTABLE'
	            	}
	        	}
            }
            post {
                always {
                    junit 'junit-reports/*.xml'
                }
            }
        }
    }
}
